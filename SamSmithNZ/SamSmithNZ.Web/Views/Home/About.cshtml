@using System.Reflection;
@using System.IO;
@{
    ViewData["Title"] = "About";
}

<div class="container">
    <br />
    <p>This website is a place for me to learn, experiment and play with new technologies in a public place. I currently have 8 major projects here, with a few more under the radar prototypes and experiments.</p>
    <p>
        <h4>My presence on other websites:</h4>
        <a href="https://twitter.com/samsmithnz" target="_blank" title="Twitter">
            <img src="~/AboutMe/twitter.png" style="width:128px;" />
        </a>
        <a href="https://github.com/samsmithnz/" target="_blank" title="Github">
            <img src="~/AboutMe/github.png" style="width:128px;" />
        </a>
        <a href="https://linkedin.com/in/samsmithnz/" target="_blank" title="LinkedIn">
            <img src="~/AboutMe/linkedin.png" style="width:128px;" />
        </a>
        <a href="https://samlearnsazure.blog/" target="_blank" title="SamLearnsAzure blog: where I am learning and sharing Azure architecture tips with DevOps">
            <img src="~/AboutMe/blogger.png" style="width:128px;" />
        </a>
        <a href="https://stackoverflow.com/users/337421/sam" target="_blank" title="Stackoverflow">
            <img src="~/AboutMe/stackoverflow.png" style="width:128px;" />
        </a>
        <a href="https://turnbasedengine.blogspot.com/" target="_blank" title="My Game Development Blog (currently paused)">
            <img src="~/AboutMe/blogger.png" style="width:128px;" />
        </a>
    </p>

    <h4>History</h4>
    <div>
        @{
            //OS platform
            string osPlatform = System.Runtime.InteropServices.RuntimeInformation.OSDescription;

            //.NET core version
            #nullable enable // From: https://stackoverflow.com/questions/55492214/the-annotation-for-nullable-reference-types-should-only-be-used-in-code-within-a
            string? aspDotnetVersion = Assembly
            .GetEntryAssembly()?
            .GetCustomAttribute<System.Runtime.Versioning.TargetFrameworkAttribute>()?
            .FrameworkName;

            //Application version
            string? appVersion = Assembly.GetEntryAssembly()?.GetCustomAttribute<AssemblyFileVersionAttribute>()?.Version;
            #nullable disable

            //Last build time
            const int peHeaderOffset = 60;
            const int linkerTimestampOffset = 8;
            byte[] bytes = new byte[2048];
            using (FileStream file = new FileStream(Assembly.GetEntryAssembly().Location, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))
            {
                file.Read(bytes, 0, bytes.Length);
            }
            Int32 headerPos = BitConverter.ToInt32(bytes, peHeaderOffset);
            Int32 secondsSince1970 = BitConverter.ToInt32(bytes, headerPos + linkerTimestampOffset);
            DateTime dt = new DateTime(1970, 1, 1, 0, 0, 0, DateTimeKind.Utc);
            DateTime dateTimeUTC = dt.AddSeconds(secondsSince1970);
            DateTime localTime = TimeZoneInfo.ConvertTimeFromUtc(dateTimeUTC, TimeZoneInfo.Local);
            string applicationLastBuildTime = localTime.ToString("dd-MMM-yyyy hh:mm:sstt") + " " + TimeZoneInfo.Local.Id;
        }

        <span><b>OS Platform:</b> @osPlatform</span><br />
        <span><b>ASP.NET Core version:</b> @aspDotnetVersion</span><br />
        <span><b>Current application version:</b> @appVersion (Last built: @applicationLastBuildTime)</span><br />
        There have been various versions of the site over the years on various domains.
        <ol>
            <li>1999-2002: SamSmith.co.nz: a basic HTML blog with a cgibin forum. Some static HTML pages were pre-generated with a VB6 application from an Access database</li>
            <li>2003-2009: SamSmith.co.nz: a basic HTML blog with a cgibin forum, with MySQL database and JavaScript navigation.</li>
            <li>2010-2012: SamSmithNZ.com with ASP.NET forms and SQL database</li>
            <li>2012-2014: SamSmithNZ.com with ASP.NET MVC4, and SQL database</li>
            <li>2014-2016: SamSmithNZ.com with ASP.NET MVC5, hosted on Azure PaaS with an Azure SQL database</li>
            <li>2017-2020: SamSmithNZ.com with ASP.NET MVC5, AngularJS, hosted on Azure PaaS, with a Azure SQL database, deployed with Azure DevOps</li>
            <li>2021: SamSmithNZ.com with ASP.NET Core and .NET 5, hosted on Azure PaaS, with Azure SQL, deployed with GitHub</li>
            <li><b>2022-(now)</b>: SamSmithNZ.com with ASP.NET Core and .NET 6, hosted on Azure PaaS, with Azure SQL, deployed with GitHub</li>
        </ol>
    </div>

    @*<h4>Statistics</h4>
        <div>
        <b>239</b> guitar tab albums<br />
        <b>3,027</b> guitar tabs<br />
        <b>48</b> international soccer/football tournaments<br />
        <b>932</b> international soccer/football games<br />
        <b>145</b> months of iTunes listening habits<br />
        <b>1219</b> Foo Fighter shows <br />
        <b>53</b> <a href="http://projecteuler.net/" target="_blank">Project Euler</a> problems completed<br />
        </div>*@

    <h4>The future?</h4>
    <img src="~/Images/Logo_Small.jpg" class="AlignedMiddle" />

</div>
